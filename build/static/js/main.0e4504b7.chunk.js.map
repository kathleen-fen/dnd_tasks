{"version":3,"sources":["settings.js","api/index.js","utility/makeActionCreator.js","utility/createReducer.js","actions/setColums.js","actions/getAllInfo.js","actions/setColumnOrder.js","actions/setTasks.js","actions/setLoading.js","actions/updateColumnOrder.js","actions/setNewOrder.js","actions/updateColumns.js","actions/setAddMode.js","actions/addColumn.js","actions/addTask.js","actions/deleteTask.js","actions/addMode.js","actions/deleteColumn.js","actions/editTask.js","actions/editColumn.js","sagas/allInfoSaga.js","selectors/columnsSelector.js","selectors/tasksSelector.js","selectors/columnOrderSelector.js","selectors/loadingSelector.js","selectors/addModeSelector.js","sagas/columnOrderSaga.js","sagas/columnsSaga.js","sagas/addColumnSaga.js","sagas/addTaskSaga.js","sagas/deleteTaskSaga.js","sagas/editTaskSaga.js","sagas/deleteColumnSaga.js","sagas/editColumnSaga.js","initSagas.js","defaultState.js","reducers/columns.js","reducers/columnOrder.js","reducers/tasks.js","reducers/addMode.js","reducers/loading.js","combineReducers.js","components/Icon.js","images/trash-alt-solid.svg","images/pen-solid.svg","images/check-solid.svg","images/times-solid.svg","components/TextArea.js","components/Task.js","components/Input.js","components/Column.js","components/AddColumn/AddColumn.js","components/TaskStorage.js","components/Loader/Loader.js","components/Main/MainContainer.js","components/App.js","getStore.js","index.js"],"names":["Api_url","process","InitialColumnId","getAllState","axios","get","putColumnOrder","columnOrder","put","putColumns","columns","putTaskIds","columnId","taskIds","addColumn","column","post","addTask","task","addColumnOrder","deleteTaskFromColumn","taskIndex","delete","deleteTaskFromTasks","taskId","editTask","newTask","patch","content","deleteColumnFromColumns","editColumnTaskIds","editColumn","columnTitle","title","makeActionCreator","type","argNames","args","action","forEach","arg","index","createReducer","initialState","handlers","state","hasOwnProperty","SET_COLUMNS","setColumns","GET_ALL_INFO","getAllInfo","SET_COLUMN_ORDER","setColumnOrder","SET_TASKS","setTasks","SET_LOADING","setLoading","UPDATE_COLUMN_ORDER","updateColumnOrder","UPDATE_COLUMNS","updateColumns","SET_ADD_MODE","setAddMode","ADD_COLUMN","ADD_TASK","DELETE_TASK","deleteTask","DELETE_COLUMN","deleteColumn","EDIT_TASK","EDIT_COLUMN","allInfoSaga","take","call","Api","response","data","tasks","Object","keys","el","id","newTaskIds","Array","isArray","item","push","newColumnOrder","console","log","columnsSelector","createSelector","toJS","columnSelector","tasksSelector","columnTasksSelector","tasksObj","map","columnOrderSelector","loadingSelector","loading","addModeSelector","addMode","changeOrder","columnOrderSaga","payload","select","prevColOrder","takeEvery","columnsSaga","prevCol","addColumnSaga","newColumn","name","newColumns","addTaskSaga","newTasks","deleteTaskSaga","splice","editTaskSaga","deleteColumnSaga","storageColumn","storageTaskIds","columnTaskIds","newStorageColumn","filter","editColumnSaga","defaultState","fromJS","reducer","config","reduce","a","key","undefined","newValue","Error","set","combineReducers","reducers","ImgContainer","styled","div","Icon","props","onClick","src","img","alt","TextAreaContainer","textarea","TextArea","inputEl","useRef","ref","onBlur","value","onChange","autoFocus","onKeyDown","Container","isDragging","Icons","Task","useState","editMode","setEditMode","newName","setNewName","dispatch","useDispatch","deleteTaskHandler","changeContentHandler","e","target","onBlurHandler","replace","onKeyDownHandler","code","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","Fragment","CheckIcon","CrossIcon","dangerouslySetInnerHTML","__html","PenIcon","TrashIcon","InputContainer","input","Input","Title","h3","TaskList","isDraggingOver","TitleContainer","Column","useSelector","deleteColumnHandler","changeTitleHandler","droppableId","droppableProps","placeholder","Modal","setAppElement","AddColumn","addColumnMode","setTitle","addModeType","setAddModeType","onChangeAddModeType","isOpen","contentLabel","onSubmit","preventDefault","checked","ContainerWrapper","TaskStorage","direction","Loader","className","MainContainer","useEffect","res","onDragEnd","result","destination","source","start","finish","startTaskIds","newStartColumn","finishTaskIds","newFinishColumn","onDragStart","onDragUpdate","update","store","sagaMiddleware","createSagaMiddleware","middleWares","composables","applyMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","values","sagas","run","bind","initSagas","getStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4504b7.chunk.js","sourcesContent":["export const Api_url =\n  process.env.NODE_ENV === \"development\"\n    ? process.env.REACT_APP_API_URL_DEV\n    : process.env.REACT_APP_API_URL_PROD;\nexport const InitialColumnId = \"-MrJWseBq4owGg_s87oW\";\n","import axios from \"axios\";\n\nimport { Api_url } from \"./../settings\";\nimport { InitialColumnId } from \"./../settings\";\n\nexport const getAllState = () => {\n  return axios.get(`${Api_url}/state.json`);\n};\n\nexport const putColumnOrder = (columnOrder) => {\n  return axios.put(`${Api_url}/state/columnOrder.json`, columnOrder);\n};\n\nexport const putColumns = (columns) => {\n  return axios.put(`${Api_url}/state/columns.json`, columns);\n};\n\nexport const putTaskIds = (columnId, taskIds) => {\n  return axios.put(\n    `${Api_url}/state/columns/${columnId}/taskIds.json`,\n    taskIds\n  );\n};\n\nexport const addColumn = (column) => {\n  return axios.post(`${Api_url}/state/columns.json`, column);\n};\n\nexport const addTask = (task) => {\n  return axios.post(`${Api_url}/state/tasks.json`, task);\n};\n\nexport const addTaskIdToColumn = (taskId) => {\n  return axios.post(\n    `${Api_url}/state/columns/${InitialColumnId}/taskIds.json`,\n    `\"${taskId}\"`\n  );\n};\n\nexport const addColumnOrder = (columnOrder) => {\n  return axios.post(`${Api_url}/state/columnOrder.json`, `\"${columnOrder}\"`);\n};\n\nexport const deleteTaskFromColumn = (columnId, taskIndex) => {\n  return axios.delete(\n    `${Api_url}/state/columns/${columnId}/taskIds/${taskIndex}.json`\n  );\n};\n\nexport const deleteTaskFromTasks = (taskId) => {\n  return axios.delete(`${Api_url}/state/tasks/${taskId}.json`);\n};\n\nexport const editTask = (taskId, newTask) => {\n  return axios.patch(`${Api_url}/state/tasks/${taskId}/.json`, {\n    content: newTask,\n  });\n};\n\nexport const deleteColumnFromColumns = (columnId) => {\n  return axios.delete(`${Api_url}/state/columns/${columnId}.json`);\n};\n\nexport const editColumnTaskIds = (columnId, taskIds) => {\n  return axios.patch(`${Api_url}/state/columns/${columnId}/.json`, {\n    taskIds: taskIds,\n  });\n};\n\nexport const editColumn = (columnId, columnTitle) => {\n  return axios.patch(`${Api_url}/state/columns/${columnId}/.json`, {\n    title: columnTitle,\n  });\n};\n","export const makeActionCreator = (type, ...argNames) => {\n  return function (...args) {\n    let action = { type };\n    argNames.forEach((arg, index) => {\n      action[argNames[index]] = args[index];\n    });\n    return action;\n  };\n};\n","export const createReducer = (initialState, handlers) => {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n};\n","import { makeActionCreator } from \"../utility\";\nexport const SET_COLUMNS = \"SET_COLUMNS\";\nexport const setColumns = makeActionCreator(SET_COLUMNS, \"columns\");\n","import { makeActionCreator } from \"../utility\";\nexport const GET_ALL_INFO = \"GET_ALL_INFO\";\nexport const getAllInfo = makeActionCreator(GET_ALL_INFO);\n","import { makeActionCreator } from \"../utility\";\nexport const SET_COLUMN_ORDER = \"SET_COLUMN_ORDER\";\nexport const setColumnOrder = makeActionCreator(\n  SET_COLUMN_ORDER,\n  \"columnOrder\"\n);\n","import { makeActionCreator } from \"../utility\";\nexport const SET_TASKS = \"SET_TASKS\";\nexport const setTasks = makeActionCreator(SET_TASKS, \"tasks\");\n","import { makeActionCreator } from \"../utility\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const setLoading = makeActionCreator(SET_LOADING, \"loading\");\n","import { makeActionCreator } from \"../utility\";\nexport const UPDATE_COLUMN_ORDER = \"UPDATE_COLUMN_ORDER\";\nexport const updateColumnOrder = makeActionCreator(\n  UPDATE_COLUMN_ORDER,\n  \"columnOrder\"\n);\n","import { makeActionCreator } from \"../utility\";\nexport const SET_NEW_ORDER = \"SET_NEW_ORDER\";\nexport const setNewOrder = makeActionCreator(SET_NEW_ORDER, \"result\");\n","import { makeActionCreator } from \"../utility\";\nexport const UPDATE_COLUMNS = \"UPDATE_COLUMNS\";\nexport const updateColumns = makeActionCreator(UPDATE_COLUMNS, \"columns\");\n","import { makeActionCreator } from \"../utility\";\nexport const SET_ADD_MODE = \"SET_ADD_MODE\";\nexport const setAddMode = makeActionCreator(SET_ADD_MODE, \"addMode\");\n","import { makeActionCreator } from \"../utility\";\nexport const ADD_COLUMN = \"ADD_COLUMN\";\nexport const addColumn = makeActionCreator(ADD_COLUMN, \"newColumn\");\n","import { makeActionCreator } from \"../utility\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const addTask = makeActionCreator(ADD_TASK, \"newTask\");\n","import { makeActionCreator } from \"../utility\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const deleteTask = makeActionCreator(DELETE_TASK, \"task\");\n","import { makeActionCreator } from \"../utility\";\nexport const ADD_MODE = \"ADD_MODE\";\nexport const addMode = makeActionCreator(ADD_MODE, \"newItem\");\n","import { makeActionCreator } from \"../utility\";\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\nexport const deleteColumn = makeActionCreator(DELETE_COLUMN, \"column\");\n","import { makeActionCreator } from \"../utility\";\nexport const EDIT_TASK = \"EDIT_TASK\";\nexport const editTask = makeActionCreator(EDIT_TASK, \"newTask\");\n","import { makeActionCreator } from \"../utility\";\nexport const EDIT_COLUMN = \"EDIT_COLUMN\";\nexport const editColumn = makeActionCreator(EDIT_COLUMN, \"column\");\n","import { take, put, call } from \"redux-saga/effects\";\n\nimport * as Api from \"./../api\";\nimport {\n  GET_ALL_INFO,\n  setColumns,\n  setTasks,\n  setColumnOrder,\n  setLoading,\n} from \"./../actions\";\n\nexport function* allInfoSaga() {\n  yield take(GET_ALL_INFO);\n  yield put(setLoading(true));\n  try {\n    const response = yield call(Api.getAllState);\n    let { columns, columnOrder, tasks } = response.data;\n    Object.keys(columns).forEach((el) => {\n      columns[el].id = el;\n      const taskIds = columns[el].taskIds;\n      const newTaskIds = [];\n      if (taskIds && !Array.isArray(taskIds)) {\n        Object.keys(taskIds).forEach((item) => {\n          newTaskIds.push(taskIds[item]);\n        });\n        columns[el].taskIds = newTaskIds;\n      }\n    });\n    tasks\n      ? Object.keys(tasks).forEach((el) => {\n          tasks[el].id = el;\n        })\n      : (tasks = {});\n    const newColumnOrder = [];\n    Object.keys(columnOrder).forEach((el) => {\n      newColumnOrder.push(columnOrder[el]);\n    });\n    yield put(setColumnOrder(newColumnOrder));\n    yield put(setColumns(columns));\n    yield put(setTasks(tasks));\n    yield put(setLoading(false));\n  } catch (e) {\n    console.log(\"error all info: \", e);\n  }\n}\n","import { createSelector } from \"reselect\";\nexport const columnsSelector = createSelector(\n  (state) => state.get(`columns`).toJS(),\n  (columns) => columns\n);\n\nexport const columnSelector = (id) => (state) => {\n  const columns = columnsSelector(state);\n  if (columns[id]) {\n    return columns[id];\n  } else {\n    return null;\n  }\n};\n","import { createSelector } from \"reselect\";\nimport { columnSelector } from \"./index\";\nexport const tasksSelector = createSelector(\n  (state) => state.get(`tasks`).toJS(),\n  (tasks) => tasks\n);\n\nexport const columnTasksSelector = (id) => (state) => {\n  const column = columnSelector(id)(state);\n  let tasks = [];\n  if (!column) return tasks;\n  const tasksObj = tasksSelector(state);\n\n  if (column.taskIds) {\n    tasks = column.taskIds.map((taskId) => tasksObj[taskId]);\n  }\n  return tasks;\n};\n","import { createSelector } from \"reselect\";\nexport const columnOrderSelector = createSelector(\n  (state) => state.get(`columnOrder`).toJS(),\n  (columnOrder) => columnOrder\n);\n","import { createSelector } from \"reselect\";\nexport const loadingSelector = createSelector(\n  (state) => state.get(`loading`),\n  (loading) => loading\n);\n","import { createSelector } from \"reselect\";\nexport const addModeSelector = createSelector(\n  (state) => state.get(`addMode`),\n  (addMode) => addMode\n);\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport { UPDATE_COLUMN_ORDER, setColumnOrder, setLoading } from \"../actions\";\nimport { columnOrderSelector } from \"./../selectors\";\nimport * as Api from \"./../api\";\n\nfunction* changeOrder(payload) {\n  const { columnOrder } = payload;\n  const prevColOrder = yield select(columnOrderSelector);\n  yield put(setColumnOrder(columnOrder));\n  yield put(setLoading(true));\n  try {\n    yield call(Api.putColumnOrder, columnOrder);\n  } catch (error) {\n    yield put(setColumnOrder(prevColOrder));\n    console.log(\"error in put: \", error);\n  }\n  yield put(setLoading(false));\n}\n\nexport function* columnOrderSaga() {\n  yield takeEvery(UPDATE_COLUMN_ORDER, changeOrder);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\nimport { columnsSelector } from \"./../selectors\";\n\nimport { UPDATE_COLUMNS, setColumns, setLoading } from \"../actions\";\nimport * as Api from \"./../api\";\n\nfunction* changeOrder(payload) {\n  const { columns } = payload;\n  const prevCol = yield select(columnsSelector);\n  yield put(setLoading(true));\n  yield put(setColumns(columns));\n  try {\n    yield call(Api.putColumns, columns);\n  } catch (error) {\n    yield put(setColumns(prevCol));\n    console.log(\"error in put: \", error);\n  }\n  yield put(setLoading(false));\n}\n\nexport function* columnsSaga() {\n  yield takeEvery(UPDATE_COLUMNS, changeOrder);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport { ADD_COLUMN, setColumnOrder, setColumns, setLoading } from \"../actions\";\nimport { columnsSelector, columnOrderSelector } from \"../selectors\";\nimport * as Api from \"./../api\";\n\nfunction* addColumn(payload) {\n  try {\n    yield put(setLoading(true));\n    const { newColumn } = payload;\n    const { data } = yield Api.addColumn(newColumn);\n    yield call(Api.addColumnOrder, data.name);\n    const column = { id: data.name, ...newColumn };\n    const columns = yield select(columnsSelector);\n    const columnOrder = yield select(columnOrderSelector);\n    const newColumns = { ...columns, [data.name]: column };\n    const newColumnOrder = [...columnOrder, data.name];\n    yield put(setColumns(newColumns));\n    yield put(setColumnOrder(newColumnOrder));\n    yield put(setLoading(false));\n  } catch (error) {\n    console.log(\"error in put: \", error);\n  }\n}\n\nexport function* addColumnSaga() {\n  yield takeEvery(ADD_COLUMN, addColumn);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport { ADD_TASK, setTasks, setColumns, setLoading } from \"../actions\";\nimport { tasksSelector, columnsSelector } from \"../selectors\";\nimport * as Api from \"./../api\";\nimport { InitialColumnId } from \"./../settings\";\n\nfunction* addTask(payload) {\n  try {\n    yield put(setLoading(true));\n    const { newTask } = payload;\n    const { data } = yield call(Api.addTask, newTask);\n    const task = { id: data.name, ...newTask };\n    const tasks = yield select(tasksSelector);\n    const newTasks = { ...tasks, [data.name]: task };\n\n    const columns = yield select(columnsSelector);\n\n    const newColumns = {\n      ...columns,\n      [InitialColumnId]: {\n        ...columns[InitialColumnId],\n        taskIds: columns[InitialColumnId].taskIds\n          ? [...columns[InitialColumnId].taskIds, data.name]\n          : [data.name],\n      },\n    };\n    yield call(\n      Api.putTaskIds,\n      InitialColumnId,\n      columns[InitialColumnId].taskIds\n        ? [...columns[InitialColumnId].taskIds, data.name]\n        : [data.name]\n    );\n\n    yield put(setTasks(newTasks));\n    yield put(setColumns(newColumns));\n    yield put(setLoading(false));\n  } catch (error) {\n    console.log(\"error in put: \", error);\n  }\n}\n\nexport function* addTaskSaga() {\n  yield takeEvery(ADD_TASK, addTask);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport { DELETE_TASK, setLoading, setColumns } from \"../actions\";\nimport { columnsSelector } from \"./../selectors\";\nimport * as Api from \"./../api\";\n\nfunction* deleteTask(payload) {\n  try {\n    yield put(setLoading(true));\n    const { columnId, taskIndex, taskId } = payload.task;\n    //delete from database\n    yield call(Api.deleteTaskFromColumn, columnId, taskIndex);\n    yield call(Api.deleteTaskFromTasks, taskId);\n    //delete from state\n    const columns = yield select(columnsSelector);\n    const newTaskIds = [...columns[columnId].taskIds];\n    newTaskIds.splice(taskIndex, 1);\n    yield put(\n      setColumns({\n        ...columns,\n        [columnId]: {\n          ...columns[columnId],\n          taskIds: newTaskIds,\n        },\n      })\n    );\n  } catch (error) {\n    console.log(\"error in put: \", error);\n  }\n  yield put(setLoading(false));\n}\n\nexport function* deleteTaskSaga() {\n  yield takeEvery(DELETE_TASK, deleteTask);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport { EDIT_TASK, setLoading, setTasks } from \"../actions\";\nimport { tasksSelector } from \"../selectors\";\nimport * as Api from \"./../api\";\n\nfunction* editTask(payload) {\n  yield put(setLoading(true));\n  const { content, id } = payload.newTask;\n  const tasks = yield select(tasksSelector);\n  const newTasks = { ...tasks, [id]: { ...tasks[id], content: content } };\n  yield put(setTasks(newTasks));\n  try {\n    yield call(Api.editTask, id, content);\n  } catch (error) {\n    yield put(setTasks(tasks));\n    console.log(\"error in patch: \", error);\n  }\n  yield put(setLoading(false));\n}\n\nexport function* editTaskSaga() {\n  yield takeEvery(EDIT_TASK, editTask);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport {\n  DELETE_COLUMN,\n  setLoading,\n  setColumns,\n  setColumnOrder,\n} from \"../actions\";\nimport {\n  columnsSelector,\n  columnOrderSelector,\n  columnSelector,\n} from \"./../selectors\";\nimport * as Api from \"./../api\";\nimport { InitialColumnId } from \"./../settings\";\n\nfunction* deleteColumn(payload) {\n  try {\n    yield put(setLoading(true));\n    const { columnId } = payload.column;\n    const column = yield select(columnSelector(columnId));\n    const storageColumn = yield select(columnSelector(InitialColumnId));\n    const columnOrder = yield select(columnOrderSelector);\n    const storageTaskIds = storageColumn.taskIds\n      ? [...storageColumn.taskIds]\n      : [];\n    const columnTaskIds = column.taskIds ? [...column.taskIds] : [];\n    const newStorageColumn = {\n      ...storageColumn,\n      taskIds: [...storageTaskIds, ...columnTaskIds],\n    };\n    const newColumnOrder = columnOrder.filter((el) => el !== columnId);\n\n    //delete from columnOrder\n    yield call(Api.putColumnOrder, newColumnOrder);\n    //edit storage column\n    yield call(Api.editColumnTaskIds, InitialColumnId, [\n      ...storageTaskIds,\n      ...columnTaskIds,\n    ]);\n    //delete column\n    yield call(Api.deleteColumnFromColumns, columnId);\n\n    //delete from state\n    const columns = yield select(columnsSelector);\n    const newColumns = { ...columns };\n    delete newColumns[columnId];\n    yield put(\n      setColumns({ ...newColumns, [InitialColumnId]: newStorageColumn })\n    );\n    yield put(setColumnOrder(newColumnOrder));\n  } catch (error) {\n    console.log(\"error in put: \", error);\n  }\n  yield put(setLoading(false));\n}\n\nexport function* deleteColumnSaga() {\n  yield takeEvery(DELETE_COLUMN, deleteColumn);\n}\n","import { takeEvery, put, select, call } from \"redux-saga/effects\";\n\nimport { EDIT_COLUMN, setLoading, setColumns } from \"../actions\";\nimport { columnSelector, columnsSelector } from \"../selectors\";\nimport * as Api from \"./../api\";\n\nfunction* editColumn(payload) {\n  const columns = yield select(columnsSelector);\n  try {\n    yield put(setLoading(true));\n    const { columnId, columnTitle } = payload.column;\n\n    const column = yield select(columnSelector(columnId));\n    const newColumn = { ...column, title: columnTitle };\n    //edit in state\n    yield put(setColumns({ ...columns, [columnId]: { ...newColumn } }));\n    // edit in database\n    yield call(Api.editColumn, columnId, columnTitle);\n  } catch (error) {\n    console.log(\"error in patch: \", error);\n    yield put(setColumns({ ...columns }));\n  }\n  yield put(setLoading(false));\n}\n\nexport function* editColumnSaga() {\n  yield takeEvery(EDIT_COLUMN, editColumn);\n}\n","import * as sagas from \"./sagas\";\n\nexport const initSagas = (sagaMiddleware) => {\n  Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\n};\n","import { fromJS } from \"immutable\";\n// TODO... finalize value list\nexport const defaultState = fromJS({\n  tasks: {},\n  columns: {},\n  columnOrder: [],\n  loading: true,\n  addMode: false,\n});\n","import { createReducer } from \"../utility\";\nimport { fromJS } from \"immutable\";\nimport { SET_COLUMNS } from \"../actions\";\nexport const columns = createReducer(null, {\n  [SET_COLUMNS](state, { columns }) {\n    return fromJS(columns);\n  },\n});\n","import { createReducer } from \"../utility\";\nimport { fromJS } from \"immutable\";\nimport { SET_COLUMN_ORDER } from \"../actions\";\nexport const columnOrder = createReducer(null, {\n  [SET_COLUMN_ORDER](state, { columnOrder }) {\n    return fromJS(columnOrder);\n  },\n});\n","import { createReducer } from \"../utility\";\nimport { fromJS } from \"immutable\";\nimport { SET_TASKS } from \"../actions\";\nexport const tasks = createReducer(null, {\n  [SET_TASKS](state, { tasks }) {\n    return fromJS(tasks);\n  },\n});\n","import { createReducer } from \"../utility\";\nimport { fromJS } from \"immutable\";\nimport { SET_ADD_MODE } from \"../actions\";\nexport const addMode = createReducer(null, {\n  [SET_ADD_MODE](state, { addMode }) {\n    return fromJS(addMode);\n  },\n});\n","import { createReducer } from \"../utility\";\nimport { fromJS } from \"immutable\";\nimport { SET_LOADING } from \"../actions\";\nexport const loading = createReducer(null, {\n  [SET_LOADING](state, { loading }) {\n    return fromJS(loading);\n  },\n});\n","import * as reducers from \"./reducers\";\nimport { fromJS } from \"immutable\";\n\nexport const combineReducers = (config) => {\n  const defaultState = fromJS(\n    Object.keys(config).reduce((a, key) => {\n      a[key] = config[key](undefined, []);\n      return a;\n    }, {})\n  );\n  return (state = defaultState, action) => {\n    return Object.keys(config).reduce((state, key) => {\n      const reducer = config[key];\n      const previousState = state.get(key);\n      const newValue = reducer(previousState, action);\n      if (newValue === undefined) {\n        throw new Error(\n          `A reducer returned undefined when reducing key::\"${key}\"`\n        );\n      }\n      return state.set(key, newValue);\n    }, state);\n  };\n};\n\nexport const reducer = combineReducers(reducers);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ImgContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 15px;\n  padding-left: 8px;\n  cursor: pointer;\n`;\n\nexport const Icon = (props) => {\n  return (\n    <ImgContainer onClick={props.onClick}>\n      <img src={props.img} alt=\"icon\" />\n    </ImgContainer>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/trash-alt-solid.6346df54.svg\";","export default __webpack_public_path__ + \"static/media/pen-solid.4b1bdc1c.svg\";","export default __webpack_public_path__ + \"static/media/check-solid.5dcf9568.svg\";","export default __webpack_public_path__ + \"static/media/times-solid.ea7c95d7.svg\";","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst TextAreaContainer = styled.textarea`\n  outline: none;\n  border: 0;\n  width: 100%;\n  background-color: transparent;\n`;\n\nexport const TextArea = (props) => {\n  const inputEl = useRef(null);\n\n  return (\n    <TextAreaContainer\n      ref={inputEl}\n      onBlur={props.onBlur}\n      type={props.type}\n      value={props.value}\n      onChange={props.onChange}\n      autoFocus\n      onKeyDown={props.onKeyDown}\n    />\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Icon } from \"./Icon\";\nimport TrashIcon from \"./../images/trash-alt-solid.svg\";\nimport PenIcon from \"./../images/pen-solid.svg\";\nimport CheckIcon from \"./../images/check-solid.svg\";\nimport CrossIcon from \"./../images/times-solid.svg\";\nimport { deleteTask, editTask } from \"./../actions\";\nimport { TextArea } from \"./TextArea\";\n\nconst Container = styled.div`\n  padding: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  margin-bottom: 8px;\n  background-color: ${(props) => (props.isDragging ? \"lightgreen\" : \"white\")};\n  line-height: 1.5;\n  display: flex;\n  justify-content: space-between;\n`;\nconst Icons = styled.div`\n  display: flex;\n`;\n\nconst Task = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const dispatch = useDispatch();\n  const deleteTaskHandler = () => {\n    dispatch(\n      deleteTask({\n        columnId: props.columnId,\n        taskId: props.task.id,\n        taskIndex: props.index,\n      })\n    );\n  };\n  const changeContentHandler = (e) => {\n    setNewName(e.target.value);\n  };\n  const onBlurHandler = (e) => {\n    setEditMode(false);\n    //change task name\n    dispatch(\n      editTask({\n        id: props.task.id,\n        content: newName.replace(/\\r?\\n|\\r/g, \"<br>\"),\n      })\n    );\n  };\n  const onKeyDownHandler = (e) => {\n    switch (e.code) {\n      case \"Escape\":\n        setEditMode(false);\n        setNewName(props.task.content);\n        break;\n      /*  case \"Enter\":\n        //change task name\n        setEditMode(false);\n        dispatch(editTask({ id: props.task.id, content: newName }));\n        break; */\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Draggable draggableId={props.task.id} index={props.index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Container isDragging={snapshot.isDragging}>\n            {editMode ? (\n              <React.Fragment>\n                <TextArea\n                  type=\"text\"\n                  value={newName}\n                  onChange={changeContentHandler}\n                  onBlur={onBlurHandler}\n                  onKeyDown={onKeyDownHandler}\n                />\n                <Icons>\n                  <Icon img={CheckIcon} onClick={onBlurHandler} />\n                  <Icon\n                    img={CrossIcon}\n                    onClick={() => {\n                      setEditMode(false);\n                      setNewName(props.task.content);\n                    }}\n                  />\n                </Icons>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <div\n                  dangerouslySetInnerHTML={{ __html: props.task.content }}\n                ></div>\n                <Icons>\n                  <Icon\n                    img={PenIcon}\n                    onClick={() => {\n                      setNewName(\n                        props.task.content.replace(/<br\\s*[/]?>/gi, \"\\n\")\n                      );\n                      setEditMode(true);\n                    }}\n                  />\n                  <Icon img={TrashIcon} onClick={deleteTaskHandler} />\n                </Icons>\n              </React.Fragment>\n            )}\n          </Container>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Task;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.input`\n  outline: none;\n  border: 0;\n  width: 100%;\n  background-color: transparent;\n`;\n\nexport const Input = (props) => {\n  const inputEl = useRef(null);\n\n  return (\n    <InputContainer\n      ref={inputEl}\n      onBlur={props.onBlur}\n      type={props.type}\n      value={props.value}\n      onChange={props.onChange}\n      autoFocus\n      onKeyDown={props.onKeyDown}\n    />\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport Task from \"./Task\";\nimport { columnTasksSelector, columnSelector } from \"./../selectors\";\nimport { Icon } from \"./Icon\";\nimport TrashIcon from \"./../images/trash-alt-solid.svg\";\nimport PenIcon from \"./../images/pen-solid.svg\";\nimport { deleteColumn, editColumn } from \"./../actions\";\nimport { Input } from \"./Input\";\n\nconst Container = styled.div`\n  margin: 8px;\n  border-radius: 2px;\n  border: 1px solid lightgrey;\n  width: 220px;\n`;\n\nconst Title = styled.h3`\n  padding: 8px;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  background-color: ${(props) => (props.isDraggingOver ? \"skyblue\" : \"white\")};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-right: 8px;\n  padding-left: 8px;\n`;\n\nconst Icons = styled.div`\n  display: flex;\n`;\n\nconst Column = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const column = useSelector(columnSelector(props.columnId));\n  const tasks = useSelector(columnTasksSelector(props.columnId));\n  const dispatch = useDispatch();\n\n  const deleteColumnHandler = () => {\n    dispatch(deleteColumn({ columnId: column.id }));\n  };\n\n  const changeTitleHandler = (e) => {\n    setNewName(e.target.value);\n  };\n  const onBlurHandler = (e) => {\n    setEditMode(false);\n    //change column name\n    dispatch(editColumn({ columnId: column.id, columnTitle: newName }));\n  };\n  const onKeyDownHandler = (e) => {\n    switch (e.code) {\n      case \"Escape\":\n        setEditMode(false);\n        setNewName(column.title);\n        break;\n      case \"Enter\":\n        //change column name\n        setEditMode(false);\n        dispatch(editColumn({ columnId: column.id, columnTitle: newName }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      {column ? (\n        <Draggable draggableId={column.id} index={props.index}>\n          {(provided) => (\n            <div {...provided.draggableProps} ref={provided.innerRef}>\n              <Container>\n                <TitleContainer {...provided.dragHandleProps}>\n                  {editMode ? (\n                    <Input\n                      type=\"text\"\n                      value={newName}\n                      onChange={changeTitleHandler}\n                      onBlur={onBlurHandler}\n                      onKeyDown={onKeyDownHandler}\n                    />\n                  ) : (\n                    <React.Fragment>\n                      <Title>{column.title}</Title>\n                      <Icons>\n                        <Icon\n                          img={PenIcon}\n                          onClick={() => {\n                            setNewName(column.title);\n                            setEditMode(true);\n                          }}\n                        />\n                        <Icon img={TrashIcon} onClick={deleteColumnHandler} />\n                      </Icons>\n                    </React.Fragment>\n                  )}{\" \"}\n                </TitleContainer>\n\n                <Droppable droppableId={column.id} type=\"task\">\n                  {(provided, snapshot) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      <TaskList isDraggingOver={snapshot.isDraggingOver}>\n                        {tasks.map((task, index) => {\n                          return task ? (\n                            <Task\n                              key={task.id}\n                              task={task}\n                              index={index}\n                              columnId={props.columnId}\n                            />\n                          ) : null;\n                        })}\n                        {provided.placeholder}\n                      </TaskList>\n                    </div>\n                  )}\n                </Droppable>\n              </Container>\n            </div>\n          )}\n        </Draggable>\n      ) : (\n        \"no column\"\n      )}\n    </div>\n  );\n};\n\nexport default Column;\n","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addModeSelector } from \"../../selectors\";\nimport { setAddMode, addColumn, addTask } from \"./../../actions\";\nModal.setAppElement(\"#root\");\n\nexport const AddColumn = () => {\n  const addColumnMode = useSelector(addModeSelector);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [addModeType, setAddModeType] = useState(\"Task\");\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const cancelHandler = () => {\n    dispatch(setAddMode(false));\n  };\n\n  const addColumnHandler = () => {\n    dispatch(addColumn({ title }));\n  };\n\n  const addTaskHandler = () => {\n    dispatch(addTask({ content: title.replace(/\\r?\\n|\\r/g, \"<br>\") }));\n    console.log(\"rep: \", title.replace(/\\r?\\n|\\r/g, \"<br>\"));\n  };\n\n  const onChangeAddModeType = (e) => {\n    setAddModeType(e.target.value);\n  };\n  const addHandler = () => {\n    switch (addModeType) {\n      case \"Task\":\n        addTaskHandler();\n        break;\n\n      case \"Column\":\n        addColumnHandler();\n        break;\n\n      default:\n        break;\n    }\n    dispatch(setAddMode(false));\n  };\n\n  return (\n    <Modal isOpen={addColumnMode} contentLabel=\"Example Modal\">\n      <form onSubmit={onSubmit}>\n        <div>\n          <input\n            type=\"radio\"\n            value=\"Task\"\n            onChange={onChangeAddModeType}\n            checked={addModeType === \"Task\"}\n          />{\" \"}\n          Add task\n          <input\n            type=\"radio\"\n            value=\"Column\"\n            onChange={onChangeAddModeType}\n            checked={addModeType === \"Column\"}\n          />{\" \"}\n          Add column\n        </div>\n        {addModeType === \"Column\" ? (\n          <label>\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            ></input>\n          </label>\n        ) : (\n          <label>\n            <textarea\n              type=\"text\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            ></textarea>\n          </label>\n        )}\n        <button onClick={addHandler}>Add</button>\n        <button onClick={cancelHandler}>Cancel</button>\n      </form>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { setAddMode } from \"./../actions\";\n\nimport Task from \"./Task\";\nimport { columnTasksSelector, columnSelector } from \"./../selectors\";\nconst ContainerWrapper = styled.div`\n  width: 100%;\n`;\nconst Container = styled.div`\n  margin: 8px;\n  border-radius: 2px;\n  border: 1px solid lightgrey;\n  width: 100%;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  background-color: ${(props) => (props.isDraggingOver ? \"skyblue\" : \"white\")};\n  flex-grow: 1;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst TaskStorage = (props) => {\n  const column = useSelector(columnSelector(props.columnId));\n  const tasks = useSelector(columnTasksSelector(props.columnId));\n  const dispatch = useDispatch();\n\n  return (\n    <ContainerWrapper>\n      {column ? (\n        <Container>\n          <Title>{column.title}</Title>\n          <Droppable droppableId={column.id} type=\"task\" direction=\"horizontal\">\n            {(provided, snapshot) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                <TaskList isDraggingOver={snapshot.isDraggingOver}>\n                  {tasks.map((task, index) => {\n                    return task ? (\n                      <Task\n                        key={task.id}\n                        task={task}\n                        index={index}\n                        columnId={props.columnId}\n                      />\n                    ) : null;\n                  })}\n                  {provided.placeholder}\n                </TaskList>\n                <button onClick={() => dispatch(setAddMode(true))}>\n                  Add new\n                </button>\n              </div>\n            )}\n          </Droppable>\n        </Container>\n      ) : (\n        \"no column\"\n      )}\n    </ContainerWrapper>\n  );\n};\n\nexport default TaskStorage;\n","import \"./Loader.css\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: fixed;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: gray;\n  filter: opacity(50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Loader = () => {\n  return (\n    <Container id=\"loader\">\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nimport Column from \"../Column\";\nimport {\n  columnOrderSelector,\n  columnsSelector,\n  loadingSelector,\n} from \"./../../selectors\";\nimport { getAllInfo, updateColumnOrder, updateColumns } from \"./../../actions\";\nimport { AddColumn } from \"../AddColumn/AddColumn\";\nimport { InitialColumnId } from \"../../settings\";\nimport TaskStorage from \"../TaskStorage\";\nimport { Loader } from \"../Loader/Loader\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MainContainer = (props) => {\n  const dispatch = useDispatch();\n  const columnOrder = useSelector(columnOrderSelector);\n  const columns = useSelector(columnsSelector);\n  const loading = useSelector(loadingSelector);\n  useEffect(() => {\n    dispatch(getAllInfo());\n  }, [dispatch]);\n\n  const res = columnOrder.map((columnId, index) => {\n    return columnId !== InitialColumnId ? (\n      <Column key={columnId} index={index} columnId={columnId} />\n    ) : null;\n  });\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    //todo: to set loading here\n    if (type === \"column\") {\n      const newColumnOrder = [...columnOrder];\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      //set state for column order\n      dispatch(updateColumnOrder(newColumnOrder));\n\n      return;\n    }\n\n    const start = columns[source.droppableId];\n    const finish = columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskIds = [...start.taskIds];\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = { ...start, taskIds: newTaskIds };\n\n      dispatch(updateColumns({ ...columns, [newColumn.id]: newColumn }));\n      return;\n    }\n    //moving from one list to another\n    const startTaskIds = start.taskIds ? [...start.taskIds] : [];\n    startTaskIds.splice(source.index, 1);\n    const newStartColumn = { ...start, taskIds: startTaskIds };\n\n    const finishTaskIds = finish.taskIds ? [...finish.taskIds] : [];\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinishColumn = { ...finish, taskIds: finishTaskIds };\n\n    dispatch(\n      updateColumns({\n        ...columns,\n        [newStartColumn.id]: newStartColumn,\n        [newFinishColumn.id]: newFinishColumn,\n      })\n    );\n  };\n  const onDragStart = () => {};\n  const onDragUpdate = (update) => {};\n  return (\n    <React.Fragment>\n      {loading ? <Loader /> : null}\n      <AddColumn />\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              <Container>\n                <React.Fragment>\n                  <TaskStorage columnId={InitialColumnId} />\n                  {res}\n                </React.Fragment>\n              </Container>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { getStore } from \"../getStore\";\nimport { MainContainer } from \"./Main\";\n\nconst store = getStore();\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <MainContainer />\n    </Provider>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { initSagas } from \"./initSagas\";\nimport { defaultState } from \"./defaultState\";\nimport { reducer } from \"./combineReducers\";\n\nexport const getStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleWares = [sagaMiddleware];\n  const composables = [applyMiddleware(...middleWares)];\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhancer = composeEnhancers(...composables);\n  const store = createStore(reducer, defaultState, enhancer);\n  console.log(\"Saga middleware implemented!\");\n  initSagas(sagaMiddleware);\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"reset-css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}